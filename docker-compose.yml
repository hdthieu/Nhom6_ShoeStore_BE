version: '3.8'

services:
  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - backend

  order-service:
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
    networks:
      - backend

  payment-service:
    container_name: payment-service
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
    networks:
      - backend

  product-service:
    container_name: product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    networks:
      - backend

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
    networks:
      - backend

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
    depends_on:
      - eureka-server
      - order-service
      - user-service
      - product-service
      - payment-service
    networks:
      - backend

  frontend:
    container_name: frontend
    build:
      context: ../Project_Group6_Fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backend

volumes:
  rabbitmq-data:
  redis-data:

networks:
  backend:
    driver: bridge
